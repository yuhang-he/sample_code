# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import src.protos.scanner_commands_pb2 as scanner__commands__pb2


class ScannerCommandStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ScanConnect = channel.unary_unary(
        '/scannercommand.ScannerCommand/ScanConnect',
        request_serializer=scanner__commands__pb2.IpAddress.SerializeToString,
        response_deserializer=scanner__commands__pb2.ScannerResponse.FromString,
        )
    self.StartScan = channel.unary_unary(
        '/scannercommand.ScannerCommand/StartScan',
        request_serializer=scanner__commands__pb2.ScanParam.SerializeToString,
        response_deserializer=scanner__commands__pb2.ScannerResponse.FromString,
        )
    self.StopScan = channel.unary_unary(
        '/scannercommand.ScannerCommand/StopScan',
        request_serializer=scanner__commands__pb2.ScannerRequest.SerializeToString,
        response_deserializer=scanner__commands__pb2.ScannerResponse.FromString,
        )
    self.ScanShutDown = channel.unary_unary(
        '/scannercommand.ScannerCommand/ScanShutDown',
        request_serializer=scanner__commands__pb2.ScannerRequest.SerializeToString,
        response_deserializer=scanner__commands__pb2.ScannerResponse.FromString,
        )
    self.ScanProgress = channel.unary_unary(
        '/scannercommand.ScannerCommand/ScanProgress',
        request_serializer=scanner__commands__pb2.ScannerRequest.SerializeToString,
        response_deserializer=scanner__commands__pb2.ScannerProgress.FromString,
        )


class ScannerCommandServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ScanConnect(self, request, context):
    """Command to connect to scanner
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartScan(self, request, context):
    """Start the scan with the scan parameters
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopScan(self, request, context):
    """Request to stop the scan
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ScanShutDown(self, request, context):
    """Request to shutdown scanner
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ScanProgress(self, request, context):
    """Request to check scan progress
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ScannerCommandServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ScanConnect': grpc.unary_unary_rpc_method_handler(
          servicer.ScanConnect,
          request_deserializer=scanner__commands__pb2.IpAddress.FromString,
          response_serializer=scanner__commands__pb2.ScannerResponse.SerializeToString,
      ),
      'StartScan': grpc.unary_unary_rpc_method_handler(
          servicer.StartScan,
          request_deserializer=scanner__commands__pb2.ScanParam.FromString,
          response_serializer=scanner__commands__pb2.ScannerResponse.SerializeToString,
      ),
      'StopScan': grpc.unary_unary_rpc_method_handler(
          servicer.StopScan,
          request_deserializer=scanner__commands__pb2.ScannerRequest.FromString,
          response_serializer=scanner__commands__pb2.ScannerResponse.SerializeToString,
      ),
      'ScanShutDown': grpc.unary_unary_rpc_method_handler(
          servicer.ScanShutDown,
          request_deserializer=scanner__commands__pb2.ScannerRequest.FromString,
          response_serializer=scanner__commands__pb2.ScannerResponse.SerializeToString,
      ),
      'ScanProgress': grpc.unary_unary_rpc_method_handler(
          servicer.ScanProgress,
          request_deserializer=scanner__commands__pb2.ScannerRequest.FromString,
          response_serializer=scanner__commands__pb2.ScannerProgress.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'scannercommand.ScannerCommand', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
